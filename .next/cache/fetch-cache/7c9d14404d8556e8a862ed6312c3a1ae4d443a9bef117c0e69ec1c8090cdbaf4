{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","cache-control":"no-cache","connection":"close","content-disposition":"attachment; filename=tous_les_articles.zip","content-length":"79287","content-type":"application/zip","date":"Thu, 13 Feb 2025 10:01:11 GMT, Thu, 13 Feb 2025 10:01:11 GMT","server":"Werkzeug/3.1.3 Python/3.11.4"},"body":"","status":200,"url":"http://localhost:8000/api/magazine/download"},"revalidate":31536000,"tags":[]}